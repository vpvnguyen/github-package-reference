name: Release with Changesets
# Changesets + GitHub Release + Changelog + Skips if No Changes
on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      # Step 1: Run Changesets â€“ creates version PR if .changeset files exist
      - name: Create version PR (if needed)
        uses: changesets/action@v1
        with:
          setupGitUser: true
          createGithubReleases: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Step 2: Check if version was bumped (skip release if not)
      - name: Detect version bump
        id: version_check
        run: |
          VERSION=$(node -p "require('./package.json').version")
          if git tag --list | grep -q "v$VERSION"; then
            echo "No new version to tag."
            echo "RELEASE_NEEDED=false" >> $GITHUB_ENV
          else
            echo "RELEASE_NEEDED=true" >> $GITHUB_ENV
            echo "VERSION=$VERSION" >> $GITHUB_ENV
            echo "TAG=v$VERSION" >> $GITHUB_OUTPUT
          fi

      # Step 3: Create and push Git tag
      - name: Tag new release
        if: env.RELEASE_NEEDED == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git tag v${{ env.VERSION }}
          git push origin v${{ env.VERSION }}

      # Step 4: Collect changelog from .changeset markdowns
      - name: Generate changelog body
        if: env.RELEASE_NEEDED == 'true'
        id: changelog
        run: |
          # Simple changelog extraction from .changeset markdown files
          echo "CHANGELOG<<EOF" >> $GITHUB_ENV
          cat .changeset/*.md >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      # Step 5: Create GitHub Release
      - name: Create GitHub Release
        if: env.RELEASE_NEEDED == 'true'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.VERSION }}
          name: Release v${{ env.VERSION }}
          body: ${{ env.CHANGELOG }}
          files: dist/*  # Attach your built assets here
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
